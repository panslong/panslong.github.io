const e=JSON.parse('{"key":"v-54b6d09e","path":"/Java/JVM/2022-11-15-JVM-%E5%AE%9E%E6%88%98%E7%AF%872-GC%E8%B0%83%E4%BC%98.html","title":"JVM | 实战篇2 | GC调优","lang":"zh-CN","frontmatter":{"title":"JVM | 实战篇2 | GC调优","icon":"article","date":"2022-11-15T00:00:00.000Z","category":"JVM","tag":["JVM"],"description":"GC调优指的是对垃圾回收（Garbage Collection）进行调优。GC调优的主要目标是避免由垃圾回收引起程序性能下降。 GC调优的核心分成三部分： 1、通用Jvm参数的设置。 2、特定垃圾回收器的Jvm参数的设置。 3、解决由频繁的FULLGC引起的程序性能问题。 GC调优没有没有唯一的标准答案，如何调优与硬件、程序本身、使用情况均有关系，重点学习调优的工具和方法。 一、GC调优的核心指标 判断GC是否需要调优，需要从三方面来考虑，与GC算法的评判标准类似： 1.吞吐量(Throughput)","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/Java/JVM/2022-11-15-JVM-%E5%AE%9E%E6%88%98%E7%AF%872-GC%E8%B0%83%E4%BC%98.html"}],["meta",{"property":"og:site_name","content":"七分熟"}],["meta",{"property":"og:title","content":"JVM | 实战篇2 | GC调优"}],["meta",{"property":"og:description","content":"GC调优指的是对垃圾回收（Garbage Collection）进行调优。GC调优的主要目标是避免由垃圾回收引起程序性能下降。 GC调优的核心分成三部分： 1、通用Jvm参数的设置。 2、特定垃圾回收器的Jvm参数的设置。 3、解决由频繁的FULLGC引起的程序性能问题。 GC调优没有没有唯一的标准答案，如何调优与硬件、程序本身、使用情况均有关系，重点学习调优的工具和方法。 一、GC调优的核心指标 判断GC是否需要调优，需要从三方面来考虑，与GC算法的评判标准类似： 1.吞吐量(Throughput)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-12T03:49:58.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"JVM | 实战篇2 | GC调优"}],["meta",{"property":"article:author","content":"七分熟"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:published_time","content":"2022-11-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-12T03:49:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM | 实战篇2 | GC调优\\",\\"image\\":[\\"https://vuepress-theme-hope-v2-demo.mrhope.site/\\"],\\"datePublished\\":\\"2022-11-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-12T03:49:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"七分熟\\",\\"url\\":\\"https://github.com/panslong\\"}]}"]]},"headers":[{"level":2,"title":"一、GC调优的核心指标","slug":"一、gc调优的核心指标","link":"#一、gc调优的核心指标","children":[{"level":3,"title":"1.吞吐量(Throughput)","slug":"_1-吞吐量-throughput","link":"#_1-吞吐量-throughput","children":[]},{"level":3,"title":"2.延迟（Latency）","slug":"_2-延迟-latency","link":"#_2-延迟-latency","children":[]},{"level":3,"title":"3.内存使用量","slug":"_3-内存使用量","link":"#_3-内存使用量","children":[]}]},{"level":2,"title":"二、GC调优方法","slug":"二、gc调优方法","link":"#二、gc调优方法","children":[{"level":3,"title":"发现问题 – jstat工具","slug":"发现问题-–-jstat工具","link":"#发现问题-–-jstat工具","children":[]},{"level":3,"title":"发现问题 – visualvm插件","slug":"发现问题-–-visualvm插件","link":"#发现问题-–-visualvm插件","children":[]},{"level":3,"title":"发现问题 – Prometheus + Grafana","slug":"发现问题-–-prometheus-grafana","link":"#发现问题-–-prometheus-grafana","children":[]},{"level":3,"title":"发现问题 – GC日志","slug":"发现问题-–-gc日志","link":"#发现问题-–-gc日志","children":[]},{"level":3,"title":"发现问题 – GC Viewer","slug":"发现问题-–-gc-viewer","link":"#发现问题-–-gc-viewer","children":[]},{"level":3,"title":"发现问题 – GCeasy","slug":"发现问题-–-gceasy","link":"#发现问题-–-gceasy","children":[]},{"level":3,"title":"发现问题 – 常见的GC模式","slug":"发现问题-–-常见的gc模式","link":"#发现问题-–-常见的gc模式","children":[]},{"level":3,"title":"解决GC问题的手段","slug":"解决gc问题的手段","link":"#解决gc问题的手段","children":[]}]},{"level":2,"title":"三、实战案例","slug":"三、实战案例","link":"#三、实战案例","children":[{"level":3,"title":"实战案例 – 内存调优 + GC调优","slug":"实战案例-–-内存调优-gc调优","link":"#实战案例-–-内存调优-gc调优","children":[]},{"level":3,"title":"GC调优的核心流程：","slug":"gc调优的核心流程","link":"#gc调优的核心流程","children":[]}]}],"git":{"createdTime":1702352998000,"updatedTime":1702352998000,"contributors":[{"name":"panshuilong","email":"1063589459@qq.com","commits":1}]},"readingTime":{"minutes":14.73,"words":4420},"filePathRelative":"Java/JVM/2022-11-15-JVM-实战篇2-GC调优.md","localizedDate":"2022年11月15日","excerpt":"<p>GC调优指的是对垃圾回收（Garbage Collection）进行调优。GC调优的主要目标是避免由垃圾回收引起程序性能下降。</p>\\n<p>GC调优的核心分成三部分：</p>\\n<p>1、通用Jvm参数的设置。</p>\\n<p>2、特定垃圾回收器的Jvm参数的设置。</p>\\n<p>3、解决由频繁的FULLGC引起的程序性能问题。</p>\\n<p>GC调优没有没有唯一的标准答案，如何调优与硬件、程序本身、使用情况均有关系，重点学习调优的工具和方法。</p>\\n<h2> 一、GC调优的核心指标</h2>\\n<p>判断GC是否需要调优，需要从三方面来考虑，与GC算法的评判标准类似：</p>\\n<h3> 1.吞吐量(Throughput)</h3>","autoDesc":true}');export{e as data};
