const e=JSON.parse('{"key":"v-28a68bea","path":"/Java/design-patterns/structural-patterns/2022-11-07-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F.html","title":"装饰者模式","lang":"zh-CN","frontmatter":{"title":"装饰者模式","icon":"article","date":"2022-11-07T00:00:00.000Z","category":"设计模式","tag":["设计模式","结构型模式"],"description":"概述 我们先来看一个快餐店的例子。 快餐店有炒面、炒饭这些快餐，可以额外附加鸡蛋、火腿、培根这些配菜，当然加配菜需要额外加钱，每个配菜的价钱通常不太一样，那么计算总价就会显得比较麻烦。 使用继承的方式存在的问题： 扩展性不好 如果要再加一种配料（火腿肠），我们就会发现需要给FriedRice和FriedNoodles分别定义一个子类。如果要新增一个快餐品类（炒河粉）的话，就需要定义更多的子类。 产生过多的子类","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/Java/design-patterns/structural-patterns/2022-11-07-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"七分熟"}],["meta",{"property":"og:title","content":"装饰者模式"}],["meta",{"property":"og:description","content":"概述 我们先来看一个快餐店的例子。 快餐店有炒面、炒饭这些快餐，可以额外附加鸡蛋、火腿、培根这些配菜，当然加配菜需要额外加钱，每个配菜的价钱通常不太一样，那么计算总价就会显得比较麻烦。 使用继承的方式存在的问题： 扩展性不好 如果要再加一种配料（火腿肠），我们就会发现需要给FriedRice和FriedNoodles分别定义一个子类。如果要新增一个快餐品类（炒河粉）的话，就需要定义更多的子类。 产生过多的子类"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T06:41:14.000Z"}],["meta",{"property":"article:author","content":"七分熟"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"结构型模式"}],["meta",{"property":"article:published_time","content":"2022-11-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T06:41:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"装饰者模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-30T06:41:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"七分熟\\",\\"url\\":\\"https://github.com/panslong\\"}]}"]]},"headers":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"结构","slug":"结构","link":"#结构","children":[]},{"level":3,"title":"案例","slug":"案例","link":"#案例","children":[]},{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":3,"title":"JDK源码解析","slug":"jdk源码解析","link":"#jdk源码解析","children":[]},{"level":3,"title":"代理和装饰者的区别","slug":"代理和装饰者的区别","link":"#代理和装饰者的区别","children":[]}],"git":{"createdTime":1717051274000,"updatedTime":1717051274000,"contributors":[{"name":"panshuilong","email":"1063589459@qq.com","commits":1}]},"readingTime":{"minutes":4.6,"words":1379},"filePathRelative":"Java/design-patterns/structural-patterns/2022-11-07-设计模式-装饰者模式.md","localizedDate":"2022年11月7日","excerpt":"<h3> 概述</h3>\\n<p>我们先来看一个快餐店的例子。</p>\\n<p>快餐店有炒面、炒饭这些快餐，可以额外附加鸡蛋、火腿、培根这些配菜，当然加配菜需要额外加钱，每个配菜的价钱通常不太一样，那么计算总价就会显得比较麻烦。</p>\\n<figure><figcaption></figcaption></figure>\\n<p>使用继承的方式存在的问题：</p>\\n<ul>\\n<li>\\n<p>扩展性不好</p>\\n<p>如果要再加一种配料（火腿肠），我们就会发现需要给FriedRice和FriedNoodles分别定义一个子类。如果要新增一个快餐品类（炒河粉）的话，就需要定义更多的子类。</p>\\n</li>\\n<li>\\n<p>产生过多的子类</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
