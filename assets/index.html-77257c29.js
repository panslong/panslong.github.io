const t=JSON.parse('{"key":"v-4a36c79a","path":"/Java/design-patterns/creational-patterns/","title":"概述","lang":"zh-CN","frontmatter":{"description":"概述 创建型模式主要解决对象的创建问题，封装复杂的创建过程，解耦对象的创建代码和使用代码。 其中， 单例模式用来创建全局唯一的对象。 工厂模式用来创建不同但是相关类型的对象（继承同一父类或者接口的一组子类），由给定的参数来决定创建哪种类型的对象。 建造者模式是用来创建复杂对象，可以通过设置不同的可选参数，“定制化”地创建不同的对象。 原型模式针对创建成本比较大的对象，利用对已有对象进行复制的方式进行创建，以达到节省创建时间的目的。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/Java/design-patterns/creational-patterns/"}],["meta",{"property":"og:site_name","content":"七分熟"}],["meta",{"property":"og:title","content":"概述"}],["meta",{"property":"og:description","content":"概述 创建型模式主要解决对象的创建问题，封装复杂的创建过程，解耦对象的创建代码和使用代码。 其中， 单例模式用来创建全局唯一的对象。 工厂模式用来创建不同但是相关类型的对象（继承同一父类或者接口的一组子类），由给定的参数来决定创建哪种类型的对象。 建造者模式是用来创建复杂对象，可以通过设置不同的可选参数，“定制化”地创建不同的对象。 原型模式针对创建成本比较大的对象，利用对已有对象进行复制的方式进行创建，以达到节省创建时间的目的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-14T03:04:27.000Z"}],["meta",{"property":"article:author","content":"七分熟"}],["meta",{"property":"article:modified_time","content":"2023-12-14T03:04:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-14T03:04:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"七分熟\\",\\"url\\":\\"https://github.com/panslong\\"}]}"]]},"headers":[],"git":{"createdTime":1702523067000,"updatedTime":1702523067000,"contributors":[{"name":"panshuilong","email":"1063589459@qq.com","commits":1}]},"readingTime":{"minutes":0.65,"words":194},"filePathRelative":"Java/design-patterns/creational-patterns/README.md","localizedDate":"2023年12月14日","excerpt":"<h1> 概述</h1>\\n<p>创建型模式主要解决对象的创建问题，封装复杂的创建过程，解耦对象的创建代码和使用代码。</p>\\n<p>其中，</p>\\n<p>单例模式用来创建全局唯一的对象。</p>\\n<p>工厂模式用来创建不同但是相关类型的对象（继承同一父类或者接口的一组子类），由给定的参数来决定创建哪种类型的对象。</p>\\n<p>建造者模式是用来创建复杂对象，可以通过设置不同的可选参数，“定制化”地创建不同的对象。</p>\\n<p>原型模式针对创建成本比较大的对象，利用对已有对象进行复制的方式进行创建，以达到节省创建时间的目的。</p>\\n","autoDesc":true}');export{t as data};
