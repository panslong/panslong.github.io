const e=JSON.parse('{"key":"v-460ad76e","path":"/framework/SpringCloud/2023-03-05-%E6%9C%8D%E5%8A%A1%E9%99%90%E6%B5%81.html","title":"服务限流","lang":"zh-CN","frontmatter":{"title":"服务限流","icon":"article","date":"2023-03-05T00:00:00.000Z","category":"SpringCloud","tag":["限流"],"description":"为什么要限流？ 并发的确大（突发流量） 防止用户恶意刷接口 限流的实现方式： Tomcat：可以设置最大连接数 Nginx，漏桶算法 网关，令牌桶算法 自定义拦截器 Nginx限流 漏桶算法 我们可以把发请求的动作比作成注水到桶中，我们处理请求的过程可以比喻为漏桶漏水。我们往桶中以任意速率流入水，以一定速率流出水。当水超过桶流量则丢弃，因为桶容量是不变的，保证了整体的速率。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/framework/SpringCloud/2023-03-05-%E6%9C%8D%E5%8A%A1%E9%99%90%E6%B5%81.html"}],["meta",{"property":"og:site_name","content":"七分熟"}],["meta",{"property":"og:title","content":"服务限流"}],["meta",{"property":"og:description","content":"为什么要限流？ 并发的确大（突发流量） 防止用户恶意刷接口 限流的实现方式： Tomcat：可以设置最大连接数 Nginx，漏桶算法 网关，令牌桶算法 自定义拦截器 Nginx限流 漏桶算法 我们可以把发请求的动作比作成注水到桶中，我们处理请求的过程可以比喻为漏桶漏水。我们往桶中以任意速率流入水，以一定速率流出水。当水超过桶流量则丢弃，因为桶容量是不变的，保证了整体的速率。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-19T07:26:33.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"服务限流"}],["meta",{"property":"article:author","content":"七分熟"}],["meta",{"property":"article:tag","content":"限流"}],["meta",{"property":"article:published_time","content":"2023-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-19T07:26:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"服务限流\\",\\"image\\":[\\"https://vuepress-theme-hope-v2-demo.mrhope.site/\\"],\\"datePublished\\":\\"2023-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-19T07:26:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"七分熟\\",\\"url\\":\\"https://github.com/panslong\\"}]}"]]},"headers":[{"level":2,"title":"为什么要限流？","slug":"为什么要限流","link":"#为什么要限流","children":[]},{"level":2,"title":"Nginx限流","slug":"nginx限流","link":"#nginx限流","children":[]},{"level":2,"title":"网关限流","slug":"网关限流","link":"#网关限流","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1724052393000,"updatedTime":1724052393000,"contributors":[{"name":"panshuilong","email":"1063589459@qq.com","commits":1}]},"readingTime":{"minutes":3.26,"words":977},"filePathRelative":"framework/SpringCloud/2023-03-05-服务限流.md","localizedDate":"2023年3月5日","excerpt":"<h2> 为什么要限流？</h2>\\n<ol>\\n<li>\\n<p>并发的确大（突发流量）</p>\\n</li>\\n<li>\\n<p>防止用户恶意刷接口</p>\\n</li>\\n</ol>\\n<figure><figcaption></figcaption></figure>\\n<p>限流的实现方式：</p>\\n<ul>\\n<li>Tomcat：可以设置最大连接数</li>\\n<li>Nginx，漏桶算法</li>\\n<li>网关，令牌桶算法</li>\\n<li>自定义拦截器</li>\\n</ul>\\n<h2> Nginx限流</h2>\\n<p>漏桶算法</p>\\n<p>我们可以把发请求的动作比作成注水到桶中，我们处理请求的过程可以比喻为漏桶漏水。我们往桶中以任意速率流入水，以一定速率流出水。当水超过桶流量则丢弃，因为桶容量是不变的，保证了整体的速率。</p>","autoDesc":true}');export{e as data};
